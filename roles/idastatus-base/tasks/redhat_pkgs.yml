# os_family == 'redhat' SYSTEM SPECIFIC

# common variables

python_version: "3.9.7"
python_minor_version: "3.9"
python_package_name: "python39"
pip_executable_target: /bin/pip3.9
src_dir: "/usr/local/src"
tmp_dir: "/tmp"
geotool_src_dir: "/usr/local/src/geotool"
ida_scripts_dir: "/usr/local/scripts"
python_modules_dir: "/ida/local/modules-py"
local_bin_dir: "/usr/local/bin"
local_man_dir: "/usr/local/share/man/"

name: set up subscription-manager
shell: |
  subscription-manager repos --enable rhel-7-*
tags:
  - pkgrepos
become: true

name: Add EPEL repository
yum_repository:
    name: epel
    description: EPEL repo
    baseurl: https://download.fedoraproject.org/pub/epel/$releasever/Modular/$basearch/
    enabled: yes
tags:
  - pkgrepos
become: true

name: Add docker repository
# the yum_repository method doesn't work, using get_url instead
get_url:
  url: https://download.docker.com/linux/rhel/docker-ce.repo
  dest: /etc/yum.repos.d/docker-ce.repo
when:
  - ansible_facts['distribution'] == "RedHat"
  - ansible_facts['distribution_major_version'] == "7"
tags:
  - pkgrepos
become: true

name: install epel pkgs
dnf:
  disable_gpg_check: yes
  name: 
      - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      - epel-release
  state: present
tags:
- packages
become: true

name: remove container tools
dnf:
  disable_gpg_check: yes
  allowerasing: yes
  name: 
      - "@container-tools"
  state: absent
tags:
- packages
become: true

name: install wheel pkg
dnf:
  disable_gpg_check: yes
  allowerasing: yes
  name: 
      - "{{ python_package_name }}-wheel-wheel.noarch"
      - "{{ python_package_name }}-setuptools-wheel.noarch"
      - "{{ python_package_name }}-pip-wheel.noarch"
  state: present
tags:
- packages
become: true

name: install docker-ce with nobest
dnf:
  disable_gpg_check: yes
  allowerasing: yes
  nobest: yes
  name: 
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
  state: present
tags:
- packages
become: true

name: install pkgs
dnf:
  disable_gpg_check: yes
  allowerasing: yes
  name: 
      - "{{ python_package_name }}"
      - "{{ python_package_name }}-pip"
      - "{{ python_package_name }}-devel"
      - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        #- https://kojipkgs.fedoraproject.org//packages/selinux-policy/37.7/2.eln120/noarch/selinux-policy-37.7-2.eln120.noarch.rpm
        #- https://kojipkgs.fedoraproject.org//packages/container-selinux/2.189.0/2.eln120/noarch/container-selinux-2.189.0-2.eln120.noarch.rpm
        #- "@container-tools"
        #- selinux-policy
        #- selinux-policy-any
        #- selinux-policy-targeted
      - libmng
      - xorg-x11-server-Xorg
      - "@Development Tools"
      - "@Server with GUI"
      - gcc
      - wget
      - ftp
      - libkadm5
      - libcom_err-devel
      - libsepol-devel
      - zlib-devel
      - pcre-devel
      - libselinux-devel
      - libverto-devel
      - keyutils-libs-devel
      - krb5-devel
      - openssl-devel
      - bzip2-devel
      - libffi-devel
      - libcurl-devel
      #- libaec
      #- libaec-devel
      #- hdf5
      #- hdf5-devel
      - libXScrnSaver
      #- geos
      #- geos-devel
      #- qt-settings
      #- qt
      #- qt-x11
      - libICE-devel
      - libSM-devel
      - libtirpc-devel
      - gl-manpages
      - libXau-devel
      - libxcb-devel
      - libX11-devel
      - libXext-devel
      - libXfixes-devel
      - libXrender-devel
      - libXrandr-devel
      - libXcursor-devel
      - libXdamage-devel
      - libXi-devel
      - libXv-devel
      - libXxf86vm-devel
      - libXinerama-devel
      - libxml2
      - libxml2-devel
      - libXt-devel
      - libglvnd-opengl
      - libuuid-devel
      - expat-devel
      - libglvnd-core-devel
      - libglvnd-devel
      - libdrm-devel
      - mesa-libGL-devel
      - mesa-libGLU-devel
      - libpng-devel
      - freetype-devel
      - fontconfig-devel
      - libXft-devel
        #- qt-devel
      - tcl
      - tk
      - tcl-devel
      - tk-devel
      - ncurses-devel
      - xz-devel
      - motif-devel
      - golang
        #- libsqlite3x-devel
        #- libsq3-devel
        #- libsqlite3x
      - tree
      #- gitflow
      - telnet
      - tmux
      - git
  state: present
tags:
- packages
become: true

#      - name: set python3 to point to python3.9 and reset to selected
#        community.general.alternatives:
#          name: python3
#          path: "/usr/bin/python{{ python_minor_version }}"
#          link: /usr/bin/python3
#          state: selected
#        tags:
#        - python_alternatives
#        become: true
#
#      - name: Directory for download of source must exist
#        file:
#          path: "{{ src_dir }}"
#          state: directory
#        become: true


# we are no longer building/installing Tk/Tcl, PyQt4, Python, or SIP.  We are installing an updated python 
# package and adjusting paths with alternatives


      # The next 4 items are installed with ansible SHELL provider. Not very 'ansible', but easy to paste into shell script 
      # Tk/Tcl section
      # install Tk/Tcl nefore building python otherwise no tkinter support, 
      # which is neeed for matplotlib backends
      # NOTE: INTERACTIVE INSTALL SCRIPT: answer the prompts, accept all defaults.
      #       NOT SURE HOW to automate or run headless. CHECK ActiveState website
      #      - name: install ActiveState Tk/Tcl
      #        shell: |
      #            cd "{{ src_dir }}"
      #            wget -nc https://downloads.activestate.com/ActiveTcl/releases/8.5.19.8519/ActiveTcl-8.5.19.8519-x86_64-linux-glibc-2.5-403583.tar.gz
      #            tar xzf ActiveTcl-8.5.19.8519-x86_64-linux-glibc-2.5-403583.tar.gz
      #            cd ActiveTcl-8.5.19.8519-x86_64-linux-glibc-2.5-403583
      #            mv komodo_download komodo_download_hidden
      #            ./install.sh --directory /opt/ActiveTcl-8.5 --runtime-directory /opt/ActiveTcl-8.5 --demo-directory /opt/ActiveTcl-8.5/demos
      #        tags:
      #        - long_tktcl
      #        become: true


      # Python section
      #      - name: Install Python version "{{ python_version }}"
      #        shell: |
      #          cd "{{ src_dir }}"
      #          rm Python-{{ python_version }}.tgz
      #          wget -nc https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tgz
      #          tar xzf Python-{{ python_version }}.tgz
      #          cd Python-{{ python_version }}
      #          ./configure --with-tcltk-includes='-I/opt/ActiveTcl-8.5/include' --with-tcltk-libs='/opt/ActiveTcl-8.5/lib/libtcl8.5.so /opt/ActiveTcl-8.5/lib/libtk8.5.so' --enable-optimizations
      #          make altinstall
      #          ln -sf /usr/local/bin/python{{python_minor_version}} /usr/local/bin/python3
      #          ln -sf /usr/local/bin/pip{{python_minor_version}} /usr/local/bin/pip3
      #          # rm /usr/src/Python-{{ python_version }}.tgz
      #        tags:
      #        - python
      #        become: true


      # SIP section
      # Now install SIP

      # Install and build SIP
      #  NOTE: this takes A LONG TIME
      #      - name: install SIP (before PyQt4)
      #        shell: |
      #            cd {{ src_dir }}
      #            rm sip-4.19.13.tar.gz
      #            wget -nc https://sourceforge.net/projects/pyqt/files/sip/sip-4.19.13/sip-4.19.13.tar.gz
      #            gunzip sip-4.19.13.tar.gz
      #            tar xf sip-4.19.13.tar
      #            cd sip-4.19.13
      #            /usr/local/bin/python3 configure.py --sip-module PyQt4.sip --destdir /usr/local/lib/python3.7/site-packages
      #            make
      #            make install
      #        tags:
      #        - long_sip
      #        become: true

      # PyQt4 section
      # Install and build PyQt4
      #  NOTE: this takes A LONG TIME
      #      - name: install PyQt4
      #        shell: |
      #            cd {{ src_dir }}
      #            rm PyQt4_gpl_x11-4.12.3.tar.gz
      #            wget -nc http://sourceforge.net/projects/pyqt/files/PyQt4/PyQt-4.12.3/PyQt4_gpl_x11-4.12.3.tar.gz
      #            tar xzf PyQt4_gpl_x11-4.12.3.tar.gz
      #            cd PyQt4_gpl_x11-4.12.3
      #            /usr/local/bin/python3 configure.py --qmake=/usr/bin/qmake-qt4 --confirm-license
      #            make
      #            make install            
      #        tags:
      #        - long_pyqt4
      #        become: true

Python modules section
Get pip installed first
name: install pip3 module
pip:
  executable: "{{ pip_executable_target }}"
  extra_args: "--no-cache-dir"
  name: 
      - pip
tags:
- pythonmodules

name: pip self-update
pip:
  name: pip
  state: latest
tags:
- pythonmodules
become: true

For some reason, obspy likes numpy to be installed
name: install numpy module
pip:
  executable: "{{ pip_executable_target }}"
  extra_args: "--no-cache-dir"
  name: 
      - numpy
tags:
- pythonmodules

now that Python is installed, we can install our modules
name: install Python modules
pip:
  executable: "{{ pip_executable_target }}"
  extra_args: "--no-cache-dir"
  name: 
     # - dynd # skip for now
      - basemap
      - boto3
      - obspy
      - dask
      - tables
      - toolz
      - pycurl
      - path.py
      - ruamel-yaml
      - alabaster
      - argcomplete
      - argh
      - astropy
      - awscli
      - Babel
      - beautifulsoup4
      - bitarray
      - blaze
      - bokeh
      - boto
      - botocore
      - Bottleneck
      - cffi
      - chest
      - cloudpickle
      - clyent
      - colorama
      - configobj
      - cryptography
      - Cython
      - cytoolz
      - datashape
      - dill
      - docutils
      - et-xmlfile
      - fabulous
      - fastcache
      - flake8
      - Flask
      - Flask-Cors
      - gevent
      - gitdb2
      - GitPython
      - greenlet
      - h5py
      - HeapDict
      - ipykernel
      - ipython
      - ipython-genutils
      - ipywidgets
      - itsdangerous
      - jdcal
      - jedi
      - Jinja2
      - jmespath
      - jsonschema
      - jupyter
      - jupyter-client
      - jupyter-console
      - jupyter-core
      - llvmlite
      - locket
      - MarkupSafe
      - mccabe
      - mistune
      - mpmath
      - multipledispatch
      - nbconvert
      - nbformat
      - networkx
      - nltk
      - nose
      - notebook
      - numba
      - numexpr
      - odo
      - openpyxl
      - pandas
      - partd
      - pathtools
      - patsy
      - pep8
      #- pexpect
      - pick
      - pickleshare
      - Pillow
      - ply
      - psutil
      - ptyprocess
      - py
      - pyasn1
      - pycosat
      - pycparser
      - pycrypto
      - pyflakes
      - Pygments
      - pyOpenSSL
      - pyproj
      - pytest
      - pytz
      - pyweed
      - PyYAML
      - pyzmq
      - QtAwesome
      - qtconsole
      - QtPy
      - redis
      - rope-py3k
      - rsa
      - s3transfer
      - scikit-image
      - scikit-learn
      - simplegeneric
      - singledispatch
      - smmap2
      - snowballstemmer
      - sockjs-tornado
      - Sphinx
      - sphinx-rtd-theme
      - spyder
      - statsmodels
      - sympy
      - terminado
      - tornado
      - traitlets
      - unicodecsv
      - Werkzeug
      - xlrd
      - XlsxWriter
      - xlwt
tags:
- pythonmodules
become: true

#- name: Enable EPEL repo on AWS EC2 Amazon Linux 2 Instances
#  shell: |
#    amazon-linux-extras install epel -y
#  when: is_ec2
#  become: true
#
#- name: Enable EPEL repo on Centos 7 OSes
#  yum:
#    name: epel-release
#    # baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
#  when: not cloudstat.stat.isdir is defined and ansible_facts['os_family'] == "RedHat"
#  become: true
#
#- name: install system pkgs
#  yum:
#    name: "{{ pkgs }}"
#    state: latest
#    update_cache: yes
#  become: true
#  vars:
#    pkgs: 
#      - openssh
#      - make
#      - zlib-devel
#      - wget
#      - gcc
#      - ncurses-devel
#      - libxml2-devel
#      - tcsh
#      - vim
#  #    - ntp
#      - chrony
#      - git
#      - lsof
#      - man-pages
#      # - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#      - iftop
#      - xorriso
#      - tree
#      - golang
#      - net-snmp
#      - unzip
#      - jq
#  tags:
#    base
##    - epel-release
## xorriso really only for centos 7.7+, but need to get rid of ISOs all together.
#
#- name: remove system pkgs
#  yum:
#    name: "{{ pkgs }}"
#    state: absent
#  become: true
#  vars:
#    pkgs: 
#      - ntpd
